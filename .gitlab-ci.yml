image: alpine:3.8

variables:
  DOCKER_DRIVER: overlay2

stages:
  #- build-web
  - build-prod
  - release
  - git-push-to-mirror

before_script:
  #- docker info
  #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - uname -a

build job:
  stage: build-prod
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKERHUB_REGISTRY: "https://index.docker.io/v1/"
    DOCKER_REGISTRY_DOCKERHUB_REPO: "anacha/nginx"
    TMPTAG: "1.14.0-r0"
    # TMPTAG: $(date +%Y%m%d-%H%M)
  script:
  # nginx, test configuration and exit.
  #- nginx -v
  #- nginx -t
  - docker info  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  #- docker build --pull -t $CI_REGISTRY_IMAGE:latest .
  - >-
    docker build --pull
    -t $CI_REGISTRY_IMAGE:$TMPTAG
    -t $CI_REGISTRY_IMAGE:latest
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:$TMPTAG
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
    .
  #- docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$TMPTAG
  - docker images
  - docker push $CI_REGISTRY_IMAGE:$TMPTAG
  - docker push $CI_REGISTRY_IMAGE:latest
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin "$DOCKERHUB_REGISTRY"
  - docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:$TMPTAG
  - docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
  - docker logout "$CI_REGISTRY"
  - docker logout "$DOCKERHUB_REGISTRY"
  #- docker images

.job_sshpushtemplate: &sshpush
  image: anacha/openssh-client
  before_script:
    - which ssh-agent || (apk add --no-cache --update openssh-client)
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - $([[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config) 
    # - ssh-keyscan -H 'bitbucket.org' >> ~/.ssh/known_hosts

deploy to server host job:
  <<: *sshpush
  stage: release
  image: anacha/openssh-client
  when: manual
  only:
  - master
  variables:
    NGINX_IMAGE: "anacha/nginx" #$CI_REGISTRY_IMAGE
  script:
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - ssh-add -l
  - >-
    $(echo "ssh core@www.keepingforward.com docker pull $NGINX_IMAGE:latest
    && docker run --rm
    --volume /var/nginx:/var/nginx:rw
    --volume /etc/letsencrypt:/etc/letsencrypt:rw
    $NGINX_IMAGE:latest
    /nginx-src/nginx-tools/reinstall.sh
    && echo "docker stop nginx-webserver"
    && docker stop nginx-webserver
    && echo "docker rm nginx-webserver"
    && docker rm nginx-webserver
    && docker run -d
    --restart always
    --name nginx-webserver
    --publish 80:80
    --publish 443:443
    --volume /var/nginx:/var/nginx:ro
    --volume /etc/letsencrypt:/etc/letsencrypt:ro
    --volume /var/nginx/ssl/dhparam.pem:/var/nginx/ssl/dhparam.pem:ro
    $NGINX_IMAGE:latest")

Github Mirror:
  <<: *sshpush
  stage: git-push-to-mirror
  variables:
    GITHUB_REPO: "github.com:anacpe9/nginx.git"
  only:
    - master
  script:
    - echo "$GITHUB_SSH_PRIVATE_KEY" | ssh-add -
    - ssh-add -l
    - git push --mirror git@$GITHUB_REPO
    - git push git@$GITHUB_REPO HEAD:master

Bitbucket Mirror:
  <<: *sshpush
  stage: git-push-to-mirror
  variables:
    BITBUCKET_REPO: "bitbucket.org:anacpe9/nginx.git"
  only:
    - master
  script:
    - echo "$BITBUCKET_SSH_PRIVATE_KEY" | ssh-add -
    - ssh-add -l
    - git push --mirror git@$BITBUCKET_REPO
    - git push git@$BITBUCKET_REPO HEAD:master
    