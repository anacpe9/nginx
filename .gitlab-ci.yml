image: alpine:3.8

variables:
  DOCKER_DRIVER: overlay2

stages:
  #- build-web
  - build-prod
  - release

before_script:
  #- docker info
  #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - uname -a

build job:
  stage: build-prod
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKERHUB_REGISTRY: "https://index.docker.io/v1/"
    DOCKER_REGISTRY_DOCKERHUB_REPO: "anacha/nginx"
    TMPTAG: "1.14.0-r0"
    # TMPTAG: $(date +%Y%m%d-%H%M)
  script:
  # nginx, test configuration and exit.
  #- nginx -v
  #- nginx -t
  - docker info  
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  #- docker build --pull -t $CI_REGISTRY_IMAGE:latest .
  - >-
    docker build --pull
    -t $CI_REGISTRY_IMAGE:$TMPTAG
    -t $CI_REGISTRY_IMAGE:latest
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:$TMPTAG
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
    .
  #- docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$TMPTAG
  - docker images
  - docker push $CI_REGISTRY_IMAGE:$TMPTAG
  - docker push $CI_REGISTRY_IMAGE:latest
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin "$DOCKERHUB_REGISTRY"
  - docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:$TMPTAG
  - docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
  - docker logout "$CI_REGISTRY"
  - docker logout "$DOCKERHUB_REGISTRY"
  #- docker images

deploy to server host job:
  stage: release
  image: anacha/openssh-client
  when: manual
  only:
  - master
  script:
  - which ssh-agent || (apk add --no-cache --update openssh-client)
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - ssh-add -l
  #- $(echo "ssh core@www.er.co.th docker pull $CI_REGISTRY_IMAGE:latest && docker run --rm --volume /var/nginx:/var/nginx:rw --volume /etc/letsencrypt:/etc/letsencrypt:rw $CI_REGISTRY_IMAGE:latest /nginx-src/nginx-tools/reinstall.sh && docker stop webserver2 && docker rm webserver2 && docker run -d --restart always --name webserver2 --publish 80:80 --publish 443:443 --volume /var/nginx:/var/nginx:ro --volume /etc/letsencrypt:/etc/letsencrypt:ro --volume /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro registry.er.co.th:443/er.co.th/www:latest")
  - $(echo "ssh core@www.er.co.th docker pull $CI_REGISTRY_IMAGE:latest && docker run --rm --volume /var/nginx:/var/nginx:rw --volume /etc/letsencrypt:/etc/letsencrypt:rw $CI_REGISTRY_IMAGE:latest /nginx-src/nginx-tools/reinstall.sh && echo "docker stop nginx-webserver" && docker stop nginx-webserver && echo "docker rm nginx-webserver" && docker rm nginx-webserver && docker run -d --restart always --name nginx-webserver --publish 80:80 --publish 443:443 --volume /var/nginx:/var/nginx:ro --volume /etc/letsencrypt:/etc/letsencrypt:ro --volume /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro $CI_REGISTRY_IMAGE:latest")
